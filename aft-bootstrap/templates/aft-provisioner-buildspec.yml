# Copyright Amazon.com, Inc. or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
version: 0.2

phases:
  pre_build:
    commands:
      - DEFAULT_PATH=$(pwd)
      - TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
      - TF_VERSION="1.3.2"
      - AFT_CT_ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
      - AFT_ADMIN_ROLE_NAME="AWSAFTAdmin"
      - AFT_ADMIN_ROLE_ARN=arn:aws:iam::$AFT_CT_ACCOUNT:role/$AFT_ADMIN_ROLE_NAME
      - ROLE_SESSION_NAME="${AFT_ADMIN_ROLE_NAME}Session"
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - git clone -b main $AFT_REPOSITORY aft-provisioner
      - |
        cd /tmp
        echo "Installing Terraform"
        curl -o terraform_${TF_VERSION}_linux_amd64.zip https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
        unzip -o terraform_${TF_VERSION}_linux_amd64.zip && mv terraform /usr/bin
        terraform --version
        cd $DEFAULT_PATH/aft-provisioner
        JSON=$(aws sts assume-role --role-arn ${AFT_ADMIN_ROLE_ARN} --role-session-name ${ROLE_SESSION_NAME})
        #Make newly assumed role default session
        export AWS_ACCESS_KEY_ID=$(echo ${JSON} | jq --raw-output ".Credentials[\"AccessKeyId\"]")
        export AWS_SECRET_ACCESS_KEY=$(echo ${JSON} | jq --raw-output ".Credentials[\"SecretAccessKey\"]")
        export AWS_SESSION_TOKEN=$(echo ${JSON} | jq --raw-output ".Credentials[\"SessionToken\"]")
        terraform init -input=false
  build:
    commands:
      - |
        TF_IN_AUTOMATION=true terraform apply -input=false --auto-approve
        git config user.name "AFT provisioner"
        git config user.email "undefined@email"
        git add terraform.tfstate
        git commit -am 'Storing state file'
        git push origin main 
  post_build:
    commands:
      - echo "Post-Build"
